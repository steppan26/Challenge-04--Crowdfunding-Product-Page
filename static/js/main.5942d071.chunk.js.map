{"version":3,"sources":["Components/NavMenu.js","images/logo.svg","images/icon-hamburger.svg","images/icon-close-menu.svg","Containers/Navbar.js","images/logo-mastercraft.svg","Components/Button.js","Components/Bookmark.js","Components/LandingCard.js","Components/DataInfoCard.js","Components/RadioButton.js","Components/PledgeExtension.js","Containers/PledgeSection.js","Components/AboutProjectCard.js","images/icon-close-modal.svg","Containers/Modal.js","images/icon-check.svg","Components/PledgeReceived.js","App.js","reportWebVitals.js","index.js"],"names":["NavMenu","className","id","href","target","Navbar","menuClicked","isMenuOpen","state","navMenuVisibility","document","getElementById","navBar","console","log","style","display","backgroundColor","setState","MenuImg","HamburgerImg","this","CloseMenuImg","src","Logo","alt","onClick","Component","Button","props","buttonClassName","parseInt","linkId","String","bgColor","color","textColor","fontSize","children","Bookmark","width","height","xmlns","fill","fillRule","cx","cy","r","d","LandingCard","DataInfoCard","dollarsBacked","formatNumber","projectTarget","projectTargetValue","totalBackers","n","Math","round","toLocaleString","daysLeft","progressBarFill","RadioButton","type","name","onChange","disabled","PledgeExtension","ExtensionDisplay","htmlFor","autoFocus","linkID","PledgeSection","backersValue","leftText","subtitle","btnText","btnColor","cardOpacity","radioState","backersValueSize","pledgeValue","opacity","headerOrder","order","radioDisplay","headerClicked","title","textOrder","text","priceOrder","valueSize","btnDisplay","extensionDisplay","AboutProjectCard","pledgeValues","pledgesRemaining","Modal","iconCloseModal","handleToUpdate","activeSection","PledgeReceived","Icon","App","openModal","modalIsOpen","closeModal","linkedBtnsArray","bookmarkIsOn","setProgressBar","createStateLinkBtnsArrayAndEventListener","createPledgeSubmitBtns","createPledgeConfirmationBtn","setBookmarkClickEvent","progressBarValue","Number","btnsArray","Array","from","getElementsByClassName","linkedBtns","forEach","btn","i","length","classList","contains","addEventListener","e","pledgeBtnEvent","push","arrayIndex","getLinkId","buttonClicked","bookmarkIcon","removeEventListener","parentElement","previousSibling","innerHTML","bookmarkNewState","modalPledgeSectionSelectedRadio","checked","sectionSelected","radioElement","hideAllExtensions","showSelectedExtensionSection","scrollToElement","x","remove","selectedPledgeSection","add","activateInputs","btnEventListner","getPledgeValuesArray","inputValue","value","pledgeSectionIndex","pledgeSection","index","minimumPledge","sumbitPledge","pledgeArray","pledgeIndex","newValue","newTotal","newBackersTotal","event","buttonsList","btnsAmount","button","elementPosition","offsetTop","window","scrollTo","top","left","behavior","show","radioEvent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5942d071.chunk.js","sourcesContent":["import React from 'react';\r\nimport './NavMenu.css';\r\n\r\nconst NavMenu = () =>{\r\n\r\n    return(\r\n        <div className=\"menuWrapper\" id=\"menuIcon\">\r\n            <a href=\"http://localhost:3000/\" target=\"_self\" className=\"push\">About</a>\r\n            <a href=\"http://localhost:3000/\" target=\"_self\">Discover</a>\r\n            <a href=\"http://localhost:3000/\" target=\"_self\">Get Started</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavMenu;","export default __webpack_public_path__ + \"static/media/logo.e6f12bc6.svg\";","export default __webpack_public_path__ + \"static/media/icon-hamburger.f8a9f0cf.svg\";","export default __webpack_public_path__ + \"static/media/icon-close-menu.32169d31.svg\";","import React, { Component } from 'react';\r\nimport NavMenu from '../Components/NavMenu';\r\nimport Logo from '../images/logo.svg';\r\nimport HamburgerImg from '../images/icon-hamburger.svg';\r\nimport CloseMenuImg from '../images/icon-close-menu.svg';\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            isMenuOpen: false\r\n        }\r\n\r\n    }\r\n\r\n    menuClicked = () =>{\r\n        let isMenuOpen = this.state.isMenuOpen;\r\n        const navMenuVisibility = document.getElementById(\"menuIcon\");\r\n        const navBar = document.getElementById(\"navBar\");\r\n\r\n        if(isMenuOpen === true){\r\n            console.log(\"closed\");\r\n            navMenuVisibility.style.display = \"none\";\r\n            navBar.style.backgroundColor = \"transparent\";\r\n            this.setState({isMenuOpen: false})\r\n        } else {\r\n            console.log(\"open\");\r\n            navMenuVisibility.style.display = \"flex\";\r\n            navBar.style.backgroundColor = \"linear-gradient(to bottom, rgba(0, 0, 0, 0.89)0% 40%, hsla(0,0,0,0))\";\r\n            this.setState({isMenuOpen: true})\r\n        }\r\n        return;\r\n\r\n    }\r\n\r\n    render(){\r\n        let MenuImg = HamburgerImg;\r\n        if(this.state.isMenuOpen === true){\r\n            MenuImg = CloseMenuImg;\r\n        } else {\r\n            MenuImg = HamburgerImg;\r\n        }\r\n\r\n        return(\r\n            <nav id=\"navBar\">\r\n                <img src={Logo} alt=\"crowdfund logo\" className=\"logo\" />\r\n                <img src={MenuImg} id=\"MenuIcon\" alt=\"menu icon\" className=\"menuIcon\" onClick={this.menuClicked} />\r\n                <NavMenu />\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/logo-mastercraft.dca2a831.svg\";","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = (props) =>{\r\n    let buttonClassName = \" btn \" + props.className\r\n    if (parseInt(props.linkId)){\r\n        const linkIdString = String(props.linkId)\r\n        buttonClassName = \" btn linkID\" + linkIdString +\" \"+ props.className\r\n    }\r\n\r\n    return(\r\n            <h4 className={buttonClassName}\r\n            style={{\r\n                backgroundColor:`${props.bgColor}`,\r\n                color:`${props.textColor}`,\r\n                fontSize:`${props.fontSize}`,\r\n                display:`${props.display}`\r\n                }}\r\n                >\r\n                {props.children}\r\n            </h4>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './Bookmark.css';\r\nimport Button from './Button'\r\n\r\nconst Bookmark = (props) =>{\r\n\r\n    return(\r\n        <div id=\"bookmarkBtn\" onClick={props.onClick}>\r\n            <Button className=\"btnBookmark\"\r\n                    bgColor='whitesmoke'\r\n                    textColor='#2F2F2F'\r\n                    fontSize='1.1em'\r\n                    >\r\n                    Bookmark\r\n                </Button>\r\n            <svg width=\"56\" height=\"56\" xmlns=\"http://www.w3.org/2000/svg\" className=\"bookmarkLogo\">\r\n                <g  id=\"bookmarkBtnColor\" fill=\"none\" fillRule=\"evenodd\">\r\n                    <circle\r\n                        fill=\"#2F2F2F\"\r\n                        cx=\"28\"\r\n                        cy=\"28\"\r\n                        r=\"28\"\r\n                    />\r\n                    <path\r\n                        fill=\"#B1B1B1\"\r\n                        d=\"M23 19v18l5-5.058L33 37V19z\"\r\n                    />\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bookmark;","import React from 'react';\r\nimport './LandingCard.css'\r\nimport Logo from '../images/logo-mastercraft.svg';\r\nimport Button from '../Components/Button';\r\nimport Bookmark from '../Components/Bookmark';\r\n\r\nconst LandingCard = () => {\r\n\r\n    return(\r\n        <div className=\"landingCard card\">\r\n            <img src= {Logo} alt=\"mastercraft logo\" className=\"masterclassLogo\" />\r\n            <h2>Mastercraft Bamboo Monitor Riser</h2>\r\n            <p>A beautiful handcrafted monitor stand to reduce neck and eye strain.</p>\r\n            <div className=\"btnsSection\">\r\n                <Button className=\"btnCta\"\r\n                    bgColor='var(--clr-primary-cyan)'\r\n                    textColor='white'\r\n                    fontSize='1em'\r\n                    linkId = \"1\"\r\n                    >\r\n                    Back this project\r\n                </Button>\r\n                <Bookmark />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingCard;","import React from 'react';\r\nimport './DataInfoCard.css'\r\n\r\nconst DataInfoCard = (props) =>{\r\n\r\n    const dollarsBacked = \"$\" + formatNumber(props.dollarsBacked);\r\n    const projectTarget = \"$\" + formatNumber(props.projectTargetValue);\r\n    const totalBackers = formatNumber(props.totalBackers)\r\n\r\n    function formatNumber(n) {\r\n        return (Math.round(n * 100) / 100).toLocaleString();\r\n    }\r\n\r\n    return(\r\n        <div className=\"card DataInfoCardWrapper\">\r\n            <div>\r\n                <h1>{dollarsBacked}</h1>\r\n                    <p>of {projectTarget} backed</p>\r\n            </div>\r\n            <hr className=\"divider\" />\r\n            <div>\r\n                <h1>{totalBackers}</h1>\r\n                <p>total backers</p>\r\n            </div>\r\n            <hr className=\"divider\" />\r\n            <div>\r\n                <h1>{props.daysLeft}</h1>\r\n                <p>days left</p>\r\n            </div>\r\n            <div id=\"projectProgressBar\">\r\n                <div id=\"progressBar\"\r\n                style={{\r\n                    width: `${props.progressBarFill}%`\r\n                }}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataInfoCard;","import React from 'react'\r\nimport './RadioButton.css'\r\n\r\nconst RadioButton = (props) =>{\r\n    return(\r\n        <label className=\"radio\" style={{display: props.display}}>\r\n            <input\r\n                type=\"radio\"\r\n                name={props.name}\r\n                onChange={props.onChange}\r\n                disabled={props.disabled}\r\n            />\r\n            <span className=\"radio_control\"></span>\r\n        </label>\r\n    );\r\n}\r\n\r\nexport default RadioButton;","import React from 'react'\r\nimport Button from './Button'\r\nimport './PledgeExtension.css'\r\n\r\nconst PledgeExtension = (props) =>{\r\n    return(\r\n        <div className=\"lowerSection\" style={{display:props.ExtensionDisplay}}>\r\n            <p>Enter your pledge</p>\r\n            <div className=\"inputs\">\r\n                <span className=\"pledgeInputBox\">\r\n                    $ <label htmlFor=\"pledgeInput\"><input type=\"text\" name=\"pledgeInput\" id=\"pledgeInput\" autoFocus /></label>\r\n                </span>\r\n                <Button className=\"btnPledge\"\r\n                    display =\"inline\"\r\n                    bgColor='var(--clr-primary-cyan)'\r\n                    textColor='white'\r\n                    fontSize = '0.85em'\r\n                    linkID = \"0\"\r\n                >Continue\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default PledgeExtension;","import React from 'react';\r\nimport './PledgeSection.css';\r\nimport Button from '../Components/Button';\r\nimport RadioButton from '../Components/RadioButton';\r\nimport PledgeExtension from '../Components/PledgeExtension.js';\r\n\r\nconst PledgeSection = (props) => {\r\n    let backersValue = \"\";\r\n    let leftText = \" left\";\r\n    let subtitle = \"\";\r\n    let btnText = props.btnText\r\n    let btnColor = 'var(--clr-primary-cyan)'\r\n    let cardOpacity = \"100%\"\r\n    let radioState = false\r\n    let className = \"pledgeSection \" + props.className\r\n\r\n    if(props.backersValueSize <= 0){\r\n        backersValue = \"\";\r\n        leftText = \"\";\r\n    } else {\r\n        backersValue = props.backersValue;\r\n        leftText = \" left\"\r\n    }\r\n\r\n    if (props.pledgeValue === 0){\r\n        subtitle = \"\";\r\n    } else {\r\n        const pledgeValue = parseInt(props.pledgeValue)\r\n        subtitle = \"Pledge $\"+ pledgeValue + \" or more\";\r\n    }\r\n\r\n    if(props.backersValue === 0){\r\n        btnText = \"Out of Stock\"\r\n        btnColor = 'var(--clr-dark-gray)'\r\n        cardOpacity = \"50%\"\r\n        radioState = true\r\n    } else {\r\n        btnColor = 'var(--clr-primary-cyan)'\r\n        radioState = false\r\n    }\r\n\r\n    return(\r\n        <div>\r\n                <div className={className}\r\n                    style={{opacity: cardOpacity}}>\r\n                    <div className=\"pledgeSectionHeader\" style={{headerOrder: `${props.order}`}}>\r\n                        <RadioButton\r\n                            name=\"pledgeRadio\"\r\n                            display={props.radioDisplay}\r\n                            onChange={props.onChange}\r\n                            disabled={radioState}\r\n                            />\r\n                        <h2 onClick={props.headerClicked}>{props.title}</h2>\r\n                        <h3>{subtitle}</h3>\r\n                    </div>\r\n                    <p className=\"pledgeText\" style={{textOrder: `${props.order}`}}>{props.text}</p>\r\n                    <div className=\"valueWrapper\" style={{priceOrder: `${props.order}`}}>\r\n                        <h4 className=\"pledgeValue\" style={{fontSize:props.valueSize}}>{backersValue}</h4>\r\n                        <h5> {leftText}</h5>\r\n                    </div>\r\n                    <Button className=\"btnPledge\"\r\n                        display ={props.btnDisplay}\r\n                        bgColor={btnColor}\r\n                        textColor='white'\r\n                        fontSize = '1em'\r\n                        linkId={props.linkId}\r\n                        >{btnText}\r\n                    </Button>\r\n                    <hr className=\"pledgeDivider\"/>\r\n                    <PledgeExtension\r\n                        ExtensionDisplay = {props.extensionDisplay}\r\n                    />\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PledgeSection;","import React from 'react';\r\nimport PledgeSection from '../Containers/PledgeSection';\r\nimport './AboutProjectCard.css';\r\n\r\nconst AboutProjectCard = (props) => {\r\n    return(\r\n        <div className=\"card aboutProject\" id=\"aboutProject\">\r\n            <h1>About this project</h1>\r\n            <p>The Mastercraft Bamboo Monitor Riser is a sturdy and stylish platform that elevates your screen to a more comfortable viewing height. Placing the monitor at eye level has the potential to improve your posture and make you more comfortable while at work, helping you stay focused on the task at hand.</p>\r\n            <p>Featuring artisan craftsmanship, the simplicity of design creates extra desk space below your computer to allow notepads, pens, and USB sticks to be stored under the stand.</p>\r\n            <PledgeSection className=\"pledgeSection\"\r\n                title = \"Bamboo Stand\"\r\n                pledgeValue= {props.pledgeValues[1]}\r\n                text = \"You get an ergonomic stand made of natural bamboo. You've helped us launch our promotional campaign, and you'll be added to a special Backer member list.\"\r\n                backersValue = {props.pledgesRemaining[0]}\r\n                radioDisplay = \"none\"\r\n                btnText = \"Select Reward\"\r\n                linkId = \"2\"\r\n            />\r\n            <PledgeSection className=\"pledgeSection\"\r\n                title = \"Black Edition Stand\"\r\n                pledgeValue= {props.pledgeValues[2]}\r\n                text = \"You get a Black Special Edition computer stand and a personal thank you. You'll be added to our Backer member list. Shipping is included.\"\r\n                backersValue = {props.pledgesRemaining[1]}\r\n                radioDisplay = \"none\"\r\n                btnText = \"Select Reward\"\r\n                linkId = \"3\"\r\n            />\r\n            <PledgeSection className=\"pledgeSection\"\r\n                title = \"Mahogany Special Edition\"\r\n                pledgeValue= {props.pledgeValues[3]}\r\n                text = \"You get two Special Edition Mahogany stands, a Backer T-Shirt, and a personal thank you. You'll be added to our Backer member list. Shipping is included.\"\r\n                backersValue = {props.pledgesRemaining[2]}\r\n                radioDisplay = \"none\"\r\n                btnText = \"Select Reward\"\r\n                linkId = \"4\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutProjectCard;","export default __webpack_public_path__ + \"static/media/icon-close-modal.732388df.svg\";","import React from 'react';\r\nimport './Modal.css';\r\nimport iconCloseModal from '../images/icon-close-modal.svg';\r\nimport PledgeSection from '../Containers/PledgeSection';\r\n\r\nconst Modal = (props) => {\r\n\r\n\r\n    return(\r\n        <div className=\"modalContainer\" id=\"modal\">\r\n            <hr className=\"modalBackground\" />\r\n            <div className=\"card\">\r\n                <div className=\"modalHeader\">\r\n                    <h1>Back this project</h1>\r\n                    <img src={iconCloseModal} alt=\"close modal button\" onClick={props.handleToUpdate}/>\r\n                </div>\r\n                <p>Want to support us in bringing Mastercraft Bamboo Monitor Rise out in the world?</p>\r\n                <PledgeSection\r\n                    className = \"modalPledge\"\r\n                    title = \"Pledge with no reward\"\r\n                    pledgeValue= {props.pledgeValues[0]}\r\n                    text = \"Choose to support us without a reward if you simply believe in our project. As a backer, you will be signed up to receive product updates.via email.\"\r\n                    backersValue = \"\"\r\n                    backersValueSize = \"0\"\r\n                    btnDisplay = \"none\"\r\n                    radioDisplay = \"inline\"\r\n                    btnText = \"Continue\"\r\n                    onChange = {props.activeSection}\r\n                    headerOrder = \"0\"\r\n                    textOrder = \"2\"\r\n                    priceOrder = \"1\"\r\n                    headerClicked = {props.headerClicked}\r\n                    valueSize = \"1.25em\"\r\n                />\r\n                <PledgeSection\r\n                    className = \"modalPledge\"\r\n                    title = \"Bamboo Stand\"\r\n                    pledgeValue=  {props.pledgeValues[1]}\r\n                    text = \"You get an ergonomic stand made of natural bamboo. You've helped us launch our promotional campaign, and you'll be added to a special Backer member list.\"\r\n                    backersValue = {props.pledgesRemaining[0]}\r\n                    backersValueSize = \"1.5em\"\r\n                    btnDisplay = \"none\"\r\n                    radioDisplay = \"inline\"\r\n                    btnText = \"Continue\"\r\n                    onChange = {props.activeSection}\r\n                    headerOrder = \"0\"\r\n                    textOrder = \"2\"\r\n                    priceOrder = \"1\"\r\n                    headerClicked = {props.headerClicked}\r\n                    valueSize = \"1.25em\"\r\n                />\r\n                <PledgeSection\r\n                    className = \"modalPledge\"\r\n                    title = \"Black Edition Stand\"\r\n                    pledgeValue=  {props.pledgeValues[2]}\r\n                    text = \"You get a Black Special Edition computer stand and a personal thank you. You'll be added to our Backer member list. Shipping is included.\"\r\n                    backersValue = {props.pledgesRemaining[1]}\r\n                    backersValueSize = \"1.5em\"\r\n                    btnDisplay = \"none\"\r\n                    radioDisplay = \"inline\"\r\n                    btnText = \"Continue\"\r\n                    onChange = {props.activeSection}\r\n                    headerOrder = \"0\"\r\n                    textOrder = \"2\"\r\n                    priceOrder = \"1\"\r\n                    headerClicked = {props.headerClicked}\r\n                    valueSize = \"1.25em\"\r\n                />\r\n                <PledgeSection\r\n                    className = \"modalPledge\"\r\n                    title = \"Mahogany Special Edition\"\r\n                    pledgeValue=  {props.pledgeValues[3]}\r\n                    text = \"You get two Special Edition Mahogany stands, a Backer T-Shirt, and a personal thank you. You'll be added to our Backer member list. Shipping is included.\"\r\n                    backersValue = {props.pledgesRemaining[2]}\r\n                    backersValueSize = \"1.5em\"\r\n                    btnDisplay = \"none\"\r\n                    radioDisplay = \"inline\"\r\n                    btnText = \"Continue\"\r\n                    onChange = {props.activeSection}\r\n                    headerOrder = \"0\"\r\n                    textOrder = \"2\"\r\n                    priceOrder = \"1\"\r\n                    headerClicked = {props.headerClicked}\r\n                    valueSize = \"1.25em\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Modal;","export default __webpack_public_path__ + \"static/media/icon-check.bdee5269.svg\";","import React from 'react';\r\nimport Button from './Button'\r\nimport './PledgeReceived.css'\r\nimport Icon from '../images/icon-check.svg'\r\n\r\nconst PledgeReceived = () =>{\r\n    return(\r\n        <div className=\"cardWrapper\" id=\"pledgeConfirmation\">\r\n            <hr className=\"modalBackground\" />\r\n            <div className=\"card modalPledgeReceived\">\r\n                <img src={Icon} alt=\"checkmark icon\" />\r\n                <h3>Thanks for your support!</h3>\r\n                <p>Your pledge brings us one step closer to sharing Mastercraft Bamboo Monitor Riser worldwide. You will get an email once our campaign is completed.</p>\r\n                <Button className=\"btnPledgeConfirmed\"\r\n                    display =\"inline\"\r\n                    bgColor='var(--clr-primary-cyan)'\r\n                    textColor='white'\r\n                    fontSize = '1em'\r\n                    >Got it!\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PledgeReceived;","import './App.css';\nimport React, { Component } from 'react';\nimport Navbar from './Containers/Navbar';\nimport LandingCard from './Components/LandingCard.js';\nimport DataInfoCard from './Components/DataInfoCard.js';\nimport AboutProjectCard from './Components/AboutProjectCard.js';\nimport Modal from './Containers/Modal.js';\nimport PledgeReceived from './Components/PledgeReceived'\n\n\nclass App extends Component{\n\n  constructor(){\n      super()\n      this.state = {\n        dollarsBacked : 89914,\n        totalBackers : 5007,\n        daysLeft : 56,\n        projectTargetValue : 100000,\n        modalIsOpen: false,\n        linkedBtnsArray: [],\n        pledgeValues: [0,25,75,200],\n        pledgesRemaining: [101,64,0],\n        bookmarkIsOn: false,\n        progressBarFill: 0,\n      }\n    }\n\n  componentDidMount(){\n    this.setProgressBar()\n    this.createStateLinkBtnsArrayAndEventListener()\n    this.createPledgeSubmitBtns()\n    this.createPledgeConfirmationBtn()\n    this.setBookmarkClickEvent()\n  }\n\n  setProgressBar(){\n    //convert values from state into $dollar value\n    let progressBarValue = (100*(Number(this.state.dollarsBacked / this.state.projectTargetValue)))\n    //stop bar from displaying further than 100%\n    if(progressBarValue >= 100){\n      progressBarValue = 100\n    }\n    this.setState({progressBarFill: progressBarValue})\n  }\n\n  createStateLinkBtnsArrayAndEventListener(){\n    // add eventlistener to buttons on the About Project page\n    const btnsArray = Array.from(document.getElementsByClassName(\"btn\"))\n    let linkedBtns = [];\n\n    btnsArray.forEach((btn) =>{\n      for(let i = 1; i < btnsArray.length + 1; i++){\n        if(btn.classList.contains(\"linkID\"+i)){\n            btn.addEventListener(\"click\", (e) => this.pledgeBtnEvent(e) )\n          linkedBtns.push(btn)\n        }\n      }\n    })\n    this.setState({linkedBtnsArray: linkedBtns})\n  }\n\n  pledgeBtnEvent(e){\n    const arrayIndex = this.getLinkId(e) -1\n    if(arrayIndex >= 1){\n      if(this.state.pledgesRemaining[arrayIndex-1] > 0){\n        this.buttonClicked(e)\n      }\n    } else {\n      this.buttonClicked(e)\n    }\n  }\n\n  createPledgeSubmitBtns(){\n    const btnsArray = Array.from(document.getElementById(\"modal\").getElementsByClassName(\"btn\"))\n    let linkedBtns = [];\n\n    btnsArray.forEach((btn) =>{\n      for(let i = 1; i < btnsArray.length + 1; i++){\n        if(btn.classList.contains(\"linkID\"+i)){\n          btn.addEventListener(\"click\", (e) => {\n            this.buttonClicked(e)\n          })\n          linkedBtns.push(btn)\n\n        }\n      }\n    })\n    this.setState({linkedBtnsArray: linkedBtns})\n  }\n\n  createPledgeConfirmationBtn(){\n    const closePledgeConfirmationBtn = document.getElementsByClassName(\"btnPledgeConfirmed\")[0]\n    closePledgeConfirmationBtn.addEventListener(\"click\", ()=>{\n      document.getElementById(\"pledgeConfirmation\").style.display = \"none\"\n      return;\n    })\n  }\n\n  setBookmarkClickEvent(){\n    const bookmarkIcon = document.getElementById(\"bookmarkBtn\")\n    bookmarkIcon.removeEventListener(\"click\", (e) => this.pledgeBtnEvent(e) )\n    bookmarkIcon.addEventListener(\"click\", () =>{\n      if(!this.state.bookmarkIsOn){\n        document.getElementById(\"bookmarkBtnColor\").children[0].style.fill = \"var(--clr-secondary-cyan)\"\n        document.getElementById(\"bookmarkBtnColor\").parentElement.previousSibling.innerHTML = \"Bookmarked\"\n        document.getElementById(\"bookmarkBtnColor\").parentElement.previousSibling.style.color = \"var(--clr-secondary-cyan)\"\n      } else {\n        document.getElementById(\"bookmarkBtnColor\").children[0].style.fill = \"#2F2F2F\"\n        document.getElementById(\"bookmarkBtnColor\").parentElement.previousSibling.innerHTML = \"Bookmark\"\n        document.getElementById(\"bookmarkBtnColor\").parentElement.previousSibling.style.color = \"#2F2F2F\"\n\n      }\n      let bookmarkNewState = !this.state.bookmarkIsOn\n      this.setState({bookmarkIsOn: bookmarkNewState})\n    })\n  }\n\n\n  buttonClicked(e){\n    let linkId = this.getLinkId(e);\n    const modalPledgeSectionSelectedRadio = document.getElementById(\"modal\").getElementsByClassName(\"pledgeSection\")[linkId-1].children[0].children[0].children[0];\n    modalPledgeSectionSelectedRadio.checked = true;\n    this.openModal()\n    this.sectionSelected(modalPledgeSectionSelectedRadio)\n  }\n\n  sectionSelected(radioElement){\n    this.hideAllExtensions();\n    this.showSelectedExtensionSection(radioElement);\n    this.scrollToElement(radioElement)\n  }\n\n  hideAllExtensions(){\n    //Hide all pledgeExtensions and <hr> sibling\n    const pledgeSectionArray = Array.from(document.getElementById(\"modal\").getElementsByClassName(\"pledgeSection\"));\n    pledgeSectionArray.forEach((x)=>{\n        x.children[5].style.display = \"none\"\n        x.children[4].style.display = \"none\"\n        x.classList.remove(\"pledgeSectionSelected\");\n    })\n  }\n\n  showSelectedExtensionSection(radioElement){\n    const selectedPledgeSection = radioElement.parentElement.parentElement.parentElement;\n    selectedPledgeSection.children[4].style.display = \"flex\" //display the <hr> element\n    selectedPledgeSection.children[5].style.display = \"flex\" //display the \"lower section\" element\n    selectedPledgeSection.classList.add(\"pledgeSectionSelected\") // add className with different CSS styles to show highlighted section\n    this.activateInputs(selectedPledgeSection)\n  }\n\n  activateInputs(selectedPledgeSection){\n    const allModalPledgeSections = Array.from(document.getElementById(\"modal\").getElementsByClassName(\"pledgeSection\"))\n    allModalPledgeSections.forEach((x) => {\n      const btn = x.getElementsByClassName(\"btn\")[1]\n      btn.removeEventListener(\"click\", this.btnEventListner)\n    })\n    selectedPledgeSection.getElementsByClassName(\"btn\")[1].addEventListener(\"click\", (e) =>{\n      this.btnEventListner(e, this.getPledgeValuesArray())\n    })\n  }\n\n  btnEventListner(e, pledgeValues){\n    //Retrieve user-inputed value and assign to inputValue\n    const inputValue = e.target.parentElement.getElementsByClassName(\"pledgeInputBox\")[0].children[0].children[0].value;\n    //get active pledge section position in pledgeSection array then once found add its index\n    //to pledgeSectionIndex. This index value can then be used to obtain correct values in\n    //the relevant state arrays\n    let pledgeSectionIndex = 0\n    const pledgeSectionArray = Array.from(document.getElementById(\"modal\").getElementsByClassName(\"pledgeSection\"))\n    pledgeSectionArray.forEach((pledgeSection, index) =>{\n      if(pledgeSection.classList.contains(\"pledgeSectionSelected\")){\n        pledgeSectionIndex = index\n      }\n    })\n\n    const minimumPledge = pledgeValues[pledgeSectionIndex];\n    if(!parseInt(inputValue)){\n      // alert(\"Please input a whole number greater than \"+ minimumPledge)\n      e.target.parentElement.getElementsByClassName(\"pledgeInputBox\")[0].children[0].children[0].value = \"\"\n    } else if (inputValue >= minimumPledge){\n      this.sumbitPledge(inputValue)\n      e.target.parentElement.getElementsByClassName(\"pledgeInputBox\")[0].children[0].children[0].value = \"\"\n      //reduce number of pledges remaining, for corresponding state, by 1\n      let pledgeArray = this.state.pledgesRemaining\n      const pledgeIndex = pledgeSectionIndex-1;\n      let newValue = pledgeArray[pledgeIndex] - 1;\n      pledgeArray[pledgeIndex] = newValue;\n\n      this.setState({pledgesRemaining: pledgeArray})\n    } else {\n      // alert(\"You must pledge at least $\"+minimumPledge)\n      e.target.parentElement.getElementsByClassName(\"pledgeInputBox\")[0].children[0].children[0].value = \"\"\n\n    }\n  }\n\n  sumbitPledge(pledgeValue){\n    document.getElementById(\"pledgeConfirmation\").style.display = \"flex\" //Display the modal thanking the user for their pledge\n    this.closeModal() //close the modal which displays the different pledge options\n\n    //add the pledged amount to the total dollars backed and update state\n    let newTotal = this.state.dollarsBacked + parseInt(pledgeValue);\n    this.setState({dollarsBacked: newTotal})\n\n    //increase number of backers in state by 1\n    let newBackersTotal = this.state.totalBackers + 1\n    this.setState({totalBackers: newBackersTotal})\n\n    //update the progress bar\n    this.setProgressBar()\n  }\n\n  getPledgeValuesArray(){\n    return this.state.pledgeValues;\n  }\n\n  getLinkId(event){\n    //Loop through each button to check if they containt a className \"linkiD\"\n    // followed by a number, up to the length of the total number of buttons\n    //then record the number of instances in btnsAmount\n    const buttonsList = Array.from(document.getElementsByClassName(\"btn\"))\n    let linkID = 0;\n\n    let btnsAmount = 0\n    buttonsList.forEach((button) =>{\n      for(let i = 0; i < buttonsList.length + 1; i++){\n        if(button.classList.contains(\"linkID\"+String((i+1)))){\n          btnsAmount++\n        }\n      }\n    });\n\n    for(let i = 1; i < btnsAmount + 1; i++){\n      if(event.target.classList.contains(\"linkID\"+i)){\n        linkID = i;\n      }\n    }\n    return linkID;\n  }\n\n  openModal = () => {\n    document.getElementById(\"modal\").style.display = \"flex\";\n    this.setState({\n      modalIsOpen: true\n    })\n  }\n\n\n  closeModal = () => {\n    document.getElementById(\"modal\").style.display = \"none\";\n    this.setState({\n      modalIsOpen: false\n    })\n  }\n\n  scrollToElement(radioElement){\n    const elementPosition = radioElement.parentElement.offsetTop - 75;//align the element to the middle of the viewport\n    window.scrollTo({\n        top: `${elementPosition}`,\n        left: 0,\n        behavior: 'smooth'\n      });\n  }\n\n  render(){\n\n    const headerClicked = (e) =>{\n      e.target.parentElement.children[0].children[0].checked = !e.target.parentElement.children[0].children[0].checked\n      if(e.target.parentElement.children[0].children[0].checked){\n        this.sectionSelected(e.target.parentElement.children[0].children[0])\n      } else {\n        this.hideAllExtensions()\n      }\n    }\n\n    const updatePledgeExtension = (radioEvent) =>{\n      if(radioEvent.target.checked){\n        this.sectionSelected(radioEvent.target)\n      } else {\n        this.hideAllExtensions()\n      }\n    }\n\n    return(\n      <div id=\"App\" className=\"defaultTheme\">\n        <Navbar />\n        <article className=\"articleWrapper\">\n          <LandingCard />\n          <DataInfoCard {...this.state} />\n          <AboutProjectCard pledgeValues={this.state.pledgeValues} pledgesRemaining={this.state.pledgesRemaining}/>\n          <Modal\n          show={this.state.modalIsOpen}\n          handleToUpdate={this.closeModal}\n          activeSection={updatePledgeExtension}\n          pledgeValues={this.state.pledgeValues}\n          pledgesRemaining={this.state.pledgesRemaining}\n          headerClicked = {headerClicked}\n          />\n          <PledgeReceived />\n        </article>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}